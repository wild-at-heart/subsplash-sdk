import { Authenticatable } from "./Authenticatable";

export class MediaItems extends Authenticatable {
    constructor() {
        super();
    }

    public async get(id: string): Promise<MediaItem> {
        const response = await this.api.get(`/media/v1/media-items/${id}`, {
            headers: {
                Authorization: `Bearer ${this.authentication?.access_token}`,
            },
        });

        return response.data;
    }
}

export interface MediaSeries {
    _embedded?: object;
    app_key?: string;
    created_at?: Date;
    deleted_at?: Date;
    display_type?: string;
    id?: string;
    is_default?: boolean;
    legacy_series_list_id?: string;
    media_items_count?: string;
    position?: string;
    published_at?: Date;
    published_media_items_count?: string;
    short_code?: string;
    status?: string;
    subtitle?: string;
    title?: string;
    updated_at?: Date;
}

export interface Image {
    content_type?: string;
    _embedded?: Embedded;
    _links?: Links;
    app_key?: string;
    average_color_hex?: string;
    created_at?: string;
    crop?: Crop;
    deleted_at?: string;
    height?: number;
    id?: string;
    s3_object_key?: string;
    title?: string;
    type?: ImageType;
    updated_at?: string;
    vibrant_color_hex?: string;
    width?: number;
}

export interface Embedded {
    "end-user": object;
    "image-set": object;
    source: object;
    "uploaded-by-user": object;
    user: object;
}

export interface Links {
    self: Self;
    dynamic: Dynamic;
    presigned_upload_url: PresignedUploadURL;
    related: PresignedUploadURL;
}

export interface Dynamic {
    href: string;
    templated: boolean;
}

export interface PresignedUploadURL {
    href: string;
}

export interface Crop {
    height: number;
    true: number;
    width: number;
    x: number;
}
// Generated by https://quicktype.io

export interface MediaItem {
    _embedded?: MediaItemEmbedded;
    _links?: Links;
    additional_label?: string;
    app_key?: string;
    auto_publish?: string;
    created_at?: Date;
    date?: Date;
    deleted_at?: Date;
    external_audio_url?: string;
    external_m3u8_url?: string;
    external_video_url?: string;
    id?: string;
    legacy_id?: string;
    outline_button_title?: string;
    outline_button_url?: string;
    position?: string;
    published_at?: Date;
    scriptures?: string[];
    short_code?: string;
    speaker?: string;
    status?: string;
    subtitle?: string;
    summary_text?: string;
    summary?: string;
    tags?: string[];
    title?: string;
    updated_at?: Date;
    uses_live_vod?: boolean;
    web_video_button_title?: string;
    web_video_button_url?: string;
    website_button_title?: string;
    website_button_url?: string;
}

export interface MediaItemEmbedded {
    audio?: RelatedId;
    "auto-publish-user"?: object;
    broadcast?: Broadcast;
    "created-by-user"?: RelatedId;
    document?: object;
    "live-template"?: RelatedId;
    "media-series"?: MediaSeries;
    notification?: object;
    "player-prompts"?: PlayerPrompt[];
    video?: Video;
    images?: EmbeddedImage[];
}

export interface Broadcast {
    end_at?: string;
    start_at?: string;
    vod_m3u8_url?: string;
}

export type ImageType = "square" | "source" | "wide" | "banner";

export interface EmbeddedImage {
    id: string;
    type: ImageType;
}

export interface RelatedId {
    id: string;
}

export interface PlayerPrompt {
    type?: string;
    _embedded?: PlayerPromptEmbedded;
    _links?: Links;
    app_key?: string;
    body?: string;
    created_at?: Date;
    default?: string;
    display_duration_secs?: number;
    giving?: Giving;
    id?: string;
    title?: string;
    trigger_time?: string;
    updated_at?: string;
}

export interface PlayerPromptEmbedded {
    "media-item": RelatedId;
}

export interface Self {
    href: string;
}

export interface Giving {
    default_amounts: boolean;
}

// Generated by https://quicktype.io

export interface SubsplashAudio {
    app_key?: string;
    content_type?: string;
    _embedded?: SubsplashAudioEmbedded;
    _links?: Links;
    id?: string;
    md5?: string;
    source_file_deleted_at?: string;
    title: string;
    trim_in?: number;
    trim_out?: number;
}

export interface SubsplashAudioEmbedded {
    "audio-outputs": AudioOutput[];
    "uploaded-by-user": unknown;
    video: Video;
}

export interface AudioOutput {
    app_key: string;
    content_type: string;
    _embedded: AudioOutputEmbedded;
    bit_rate: number;
    deleted_at: string;
    duration: number;
}

export interface AudioOutputEmbedded {
    audio: unknown;
    "uploaded-by-user": unknown;
}

export interface Video {
    app_key?: string;
    content_type?: string;
    _embedded?: VideoEmbedded;
    _links?: Links;
    id?: string;
    source_file_deleted_at?: string;
    title?: string;
    trim_in?: number;
    trim_out?: number;
    type?: string;
}

export interface VideoEmbedded {
    audio: unknown;
    playlists: Playlist[];
    "uploaded-by-user": unknown;
    "video-outputs": Playlist[];
    "video-thumbnails": Playlist[];
}

export interface Playlist {
    app_key: string;
    content_type: string;
    _embedded: PlaylistEmbedded;
    created_at: Date;
    deleted_at: Date;
    id: string;
    legacy_URL?: string;
    updated_at: Date;
    video_time?: number;
}

export interface PlaylistEmbedded {
    video: VideoClass;
    "uploaded-by-user": VideoClass;
}

export interface VideoClass {
    value: unknown;
}

export interface Links {
    related: Related;
}

export interface Related {
    href: string;
}

export interface SubsplashUpload {
    id?: string;
    part_count?: number;
    _embedded?: EmbeddedUpload;
    part_etags?: string[];
    status?: string;
}

export interface EmbeddedUpload {
    audio?: Audio;
    video?: Video;
}

export interface Audio {
    id: string;
}

export interface SubsplashJob {
    app_key?: string;
    file_name?: string;
    _embedded?: Embedded;
}

export interface SubsplashVideo {
    app_key?: string;
    content_type: string;
    title: string;
    _embedded?: VideoEmbedded;
    _links?: Links;
    id?: string;
    source_file_deleted_at?: string;
    trim_in?: number;
    trim_out?: number;
    type?: string;
}
